{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/Footer.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Meta.js","components/Rating.js","components/Product.js","components/Loading.js","components/Paginate.js","components/Message.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","USER","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Footer","Container","Row","Col","className","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","to","Brand","href","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Meta","description","Helmet","content","defaultProps","Rating","text","color","style","propTpes","PropTypes","number","isRequired","string","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loading","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","Message","children","Alert","listProducts","pageNumber","listProductsDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","errorProductReview","successProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","sucessDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","successDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","dliveredAt","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.bfb0cc90.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { \r\n    productListReducer, \r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { \r\n    orderCreateReducer, \r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderDeliverReducer,\r\n    orderListMyReducer,\r\n    orderListReducer\r\n} from './reducers/orderReducers'\r\nimport { \r\n    userLoginReducer, \r\n    userRegisterReducer, \r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer\r\n} from './reducers/userReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') \r\n    ? JSON.parse(localStorage.getItem('cartItems')) \r\n    : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') \r\n    ? JSON.parse(localStorage.getItem('userInfo')) \r\n    : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') \r\n    ? JSON.parse(localStorage.getItem('shippingAddress')) \r\n    : {}\r\n\r\nconst initialState = {\r\n    cart: { \r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n    PRODUCT_TOP_RESET\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_TOP_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\nexport const PRODUCT_TOP_RESET = 'PRODUCT_TOP_RESET'","import { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n    state = { cartItems: [], shippingAddress: {} }, \r\n    action\r\n) => {\r\n    switch(action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n            if(existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            }\r\n\r\n            default: \r\n                return state\r\n        }\r\n}\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","import { \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS, \r\n    USER_LOGIN_FAIL, \r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n    USER_DETAILS_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    // USER_UPDATE_PROFILE_RESET\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_RESET,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {  }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { USER: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return { \r\n                user: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_RESET\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS: \r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n    state = { loading: true, orderItems: [], shippingAddress: {} }, action\r\n) => {\r\n    switch(action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS: \r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (\r\n    state = {}, action\r\n) => {\r\n    switch(action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS: \r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (\r\n    state = {}, action\r\n) => {\r\n    switch(action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_DELIVER_SUCCESS: \r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (\r\n    state = { orders: [] }, action\r\n) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS: \r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (\r\n    state = { orders: [] }, action\r\n) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_SUCCESS: \r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import React from 'react'\r\nimport  { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return <footer>\r\n        <Container>\r\n            <Row>\r\n                <Col className='text-center py-3'>\r\n                    Copyright &copy; React_Shop\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </footer>\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({history}) => {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                placeholder='Search Product...'\r\n                className='mr-sm-2 ml-sm-5'\r\n            >\r\n            </Form.Control>\r\n            <Button type='submit' variant='outline-success' className='p-2'>\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport { \r\n    USER_LOGIN_FAIL, \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS, \r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL, \r\n    USER_DETAILS_REQUEST, \r\n    USER_DETAILS_SUCCESS, \r\n    USER_DETAILS_RESET,\r\n    USER_DETAILS_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    // USER_UPDATE_PROFILE_RESET\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    // USER_UPDATE_RESET,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login',\r\n            { email, password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users',\r\n            { name, email, password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users`, config)\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({ type: USER_DELETE_SUCCESS })\r\n        \r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n       \r\n        dispatch({ type: USER_UPDATE_SUCCESS })\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n        \r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand href=\"/\">React_Shop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Route render={({history}) => <SearchBox history={history} />} />\r\n                        <Nav className=\"ml-auto\">\r\n                        <LinkContainer to='/cart'>\r\n                            <Nav.Link>\r\n                                <i className='fas fa-shopping-cart'></i>Cart\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                        {userInfo ? (\r\n                            <NavDropdown title={userInfo.name} id='username'>\r\n                                <LinkContainer to='/profile'>\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <NavDropdown.Item onClick={logoutHandler}>\r\n                                    Logout\r\n                                </NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        ) : (\r\n                            <LinkContainer to='/login'>\r\n                                <Nav.Link>\r\n                                    <i className='fas fa-user'></i>Sign In\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n                        )}\r\n                        {userInfo && userInfo.isAdmin && (\r\n                            <NavDropdown title='Admin' id='adminmenu'>\r\n                                <LinkContainer to='/admin/userlist'>\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/admin/productlist'>\r\n                                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/admin/orderlist'>\r\n                                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            </NavDropdown>\r\n                        )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keyword }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta \r\n                name='description' \r\n                content={description} \r\n            />\r\n            <meta \r\n                name='keyword' \r\n                content={keyword}\r\n            />\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome To PropShop',\r\n    description: 'We sell the best products for cheap',\r\n    keyword: 'electronics, buy electronics, cheap electroncs'\r\n}\r\n\r\nexport default Meta\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Rating = ({value, text, color}) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i  \r\n                    style={{color}}\r\n                    className={\r\n                        value >= 1\r\n                            ? 'fas fa-star'\r\n                            : value >= 0.5\r\n                            ? 'fas fastar-galf-alt'\r\n                            : 'far fa-star'\r\n                    }\r\n                >\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i  \r\n                    style={{color}}\r\n                    className={\r\n                        value >= 2\r\n                            ? 'fas fa-star'\r\n                            : value >= 1.5\r\n                            ? 'fas fastar-galf-alt'\r\n                            : 'far fa-star'\r\n                    }\r\n                >\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i  \r\n                    style={{color}}\r\n                    className={\r\n                        value >= 3\r\n                            ? 'fas fa-star'\r\n                            : value >= 2.5\r\n                            ? 'fas fastar-galf-alt'\r\n                            : 'far fa-star'\r\n                    }\r\n                >\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i  \r\n                    style={{color}}\r\n                    className={\r\n                        value >= 4\r\n                            ? 'fas fa-star'\r\n                            : value >= 3.5\r\n                            ? 'fas fastar-galf-alt'\r\n                            : 'far fa-star'\r\n                    }\r\n                >\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i  \r\n                    style={{color}}\r\n                    className={\r\n                        value >= 5\r\n                            ? 'fas fa-star'\r\n                            : value >= 4.5\r\n                            ? 'fas fastar-galf-alt'\r\n                            : 'far fa-star'\r\n                    }\r\n                >\r\n                </i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n}\r\n\r\nRating.propTpes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Rating from '../components/Rating'\r\n\r\nconst Product = ({product}) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'>\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as='div'>\r\n                    <Rating\r\n                        value={product.rating}\r\n                        text={`${product.numReviews} reviews`}\r\n                    />\r\n                </Card.Text>\r\n                <Card.Text as='h3'>${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{ \r\n                width: '100px', \r\n                height: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n                <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({pages, page, isAdmin = false, keyword = ''}) => {\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={\r\n                        !isAdmin \r\n                        ? keyword \r\n                        ? `/search/${keyword}/page/${x+1}` \r\n                        : `/page/${x+1}` \r\n                        : `/admin/productlist/${x+1}`}\r\n                >\r\n                    <Pagination.Item active={x+1 === page}>{x+1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    // PRODUCT_CREATE_RESET\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n        const { data } = await axios.get(\r\n            `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                    ? error.response.data.message\r\n                    :error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductsDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                    ? error.response.data.message\r\n                    :error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (\r\n    dispatch, \r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const { \r\n            userLogin: { userInfo } \r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS\r\n        })\r\n        \r\n    } catch(error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = (id) => async (\r\n    dispatch, \r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const { \r\n            userLogin: { userInfo } \r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch(error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (\r\n    dispatch, \r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const { \r\n            userLogin: { userInfo } \r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch(error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n    dispatch, \r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const { \r\n            userLogin: { userInfo } \r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS\r\n        })\r\n        \r\n    } catch(error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                    ? error.response.data.message\r\n                    :error.message\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loading from './Loading'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n    \r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { loading, error, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return loading ? (\r\n        <Loading />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n          {products.map((product) => (\r\n            <Carousel.Item key={product._id}>\r\n              <Link to={`/product/${product._id}`}>\r\n                <Image src={product.image} alt={product.name} fluid />\r\n                <Carousel.Caption className='carousel-caption'>\r\n                  <h2>\r\n                    {product.name} (${product.price})\r\n                  </h2>\r\n                </Carousel.Caption>\r\n              </Link>\r\n            </Carousel.Item>\r\n          ))}\r\n        </Carousel>\r\n      )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Meta from '../components/Meta'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loading from '../components/Loading'\r\nimport Paginate from '../components/Paginate'\r\nimport Message from '../components/Message'\r\nimport { listProducts } from '../actions/productActions'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst HomeScreen = ({match}) => {\r\n\r\n    const keyword = match.params.keyword\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            {!keyword ? (\r\n            <ProductCarousel />\r\n            ) : (\r\n                <Link to='/' className='btn btn-light'>\r\n                    Go Back\r\n                </Link>\r\n            )}\r\n            <h1>Latest Products</h1>\r\n            {loading ? (\r\n                <Loading />\r\n            ) : error  ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                    <>\r\n                        <Row>\r\n                            {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Paginate \r\n                            pages={pages} \r\n                            page={page} \r\n                            keyword={keyword ? keyword : ''} \r\n                        />\r\n                    </>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport  { useDispatch, useSelector } from 'react-redux'\r\nimport Meta from '../components/Meta'\r\nimport { Button, Card, Col, Form, Image, ListGroup, Row } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Rating from '../components/Rating'\r\nimport { \r\n    listProductsDetails,\r\n    createProductReview\r\n} from '../actions/productActions'\r\nimport Loading from '../components/Loading'\r\nimport Message from '../components/Message'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(1)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { \r\n        error: errorProductReview, \r\n        success: successProductReview \r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if(successProductReview) {\r\n            alert('Review Submitted!')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n        dispatch(listProductsDetails(match.params.id))\r\n    }, [dispatch, match, qty, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(match.params.id, {\r\n            rating,\r\n            comment\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>\r\n                Go Back\r\n            </Link>\r\n        {loading ? <Loading /> : error ? <Message variant='danger'>{error}</Message> : (\r\n            <>\r\n                <Meta title={product.name} />\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>{product.name}</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Rating \r\n                                    value={product.rating}\r\n                                    text={`${product.numReviews} reviews`}\r\n                                />\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                Price: ${product.price}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                Description: ${product.description}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <Card>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Price:</Col>\r\n                                        <Col>\r\n                                            <strong>${product.price}</strong>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Status:</Col>\r\n                                        <Col>\r\n                                            {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                {product.countInStock > 0 && (\r\n                                    <ListGroup>\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Qty</Col>\r\n                                                <Col>\r\n                                                    <Form.Control \r\n                                                        as='select' \r\n                                                        value={qty} \r\n                                                        onChange={(e) => \r\n                                                        setQty(e.target.value)}\r\n                                                    >\r\n                                                        {[...Array(product.countInStock).keys()].map((x) => (\r\n                                                            <option key={x + 1} value={x + 1}>\r\n                                                                {x + 1}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                )}\r\n\r\n                                <ListGroup.Item>\r\n                                    <Button \r\n                                        onClick={addToCartHandler}\r\n                                        className='btn-block' \r\n                                        type='button'\r\n                                        disabled={product.countInStock === 0}\r\n                                    >\r\n                                        Add To Cart\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <h2>Reviews</h2>\r\n                        {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                        <ListGroup variant='flush'>\r\n                            {product.reviews.map((review) => (\r\n                                <ListGroup.Item key={review._id}>\r\n                                    <strong>{review.name}</strong>\r\n                                    <Rating value={review.rating} />\r\n                                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                                    <p>{review.comment}</p>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                            <ListGroup.Item>\r\n                                <h2>Write a Customer Review</h2>\r\n                                {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                                {userInfo ? (\r\n                                    <Form onSubmit={submitHandler}>\r\n                                        <Form.Group controlId='rating'>\r\n                                            <Form.Label>Rating</Form.Label>\r\n                                            <Form.Control \r\n                                                as='select' \r\n                                                value={rating} \r\n                                                onChange={(e) => setRating(e.target.value)} \r\n                                            >\r\n                                                <option value=''>Select...</option>\r\n                                                <option value='1'>1 - Poor</option>\r\n                                                <option value='2'>2 - Fair</option>\r\n                                                <option value='3'>3 - Good</option>\r\n                                                <option value='4'>4 - Very Good</option>\r\n                                                <option value='5'>5 - Excellent</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId='comment'>\r\n                                            <Form.Label>Comment</Form.Label>\r\n                                            <Form.Control\r\n                                                as='textarea'\r\n                                                row='3'\r\n                                                value={comment}\r\n                                                onChange={(e) => setComment(e.target.value)}\r\n                                            ></Form.Control>\r\n                                        </Form.Group>\r\n                                        <Button type='submit' variant='primary'>\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Form>\r\n                                ) : (\r\n                                    <Message>\r\n                                        Please <Link to='/login'>sign in</Link> to write a review {' '}\r\n                                    </Message>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n    \r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen","import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({children}) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loading from '../components/Loading'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap'\r\n\r\nconst LoginScreen = ({location, history}) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loading />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password Address</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer?{' '}\r\n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loading from '../components/Loading'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap'\r\n\r\nconst RegisterScreen = ({location, history}) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loading />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password Address</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Confirm password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Sign Up\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account?{' '}\r\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Login\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loading from \"../components/Loading\"\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\"\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n\tconst [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n\tconst { userInfo } = userLogin\r\n\t\r\n\tconst userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n\tconst { success } = userUpdateProfile\r\n\r\n\tconst orderListMy = useSelector((state) => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!userInfo) {\r\n\t\t\thistory.push(\"/login\")\r\n\t\t} else {\r\n\t\t\tif (!user.name) {\r\n\t\t\t\tdispatch(getUserDetails(\"profile\"))\r\n\t\t\t\tdispatch(listMyOrders())\r\n\t\t\t} else {\r\n\t\t\t\tsetName(user.name)\r\n\t\t\t\tsetEmail(user.email)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [dispatch, history, userInfo, user])\r\n\r\n\tconst submitHandler = e => {\r\n\t\te.preventDefault()\r\n\t\t//DISPATCH REGISTER\r\n\t\tif (password !== confirmPassword) {\r\n\t\t\tsetMessage(\"Passwords do not match\")\r\n\t\t} else {\r\n\t\t\tdispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Row>\r\n\t\t\t<Col md={3}>\r\n\t\t\t\t<h2>User Profile</h2>\r\n\t\t\t\t{message && <Message variant=\"danger\">{message}</Message>}\r\n\t\t\t\t{error && <Message variant=\"danger\">{error}</Message>}\r\n\t\t\t\t{success && <Message variant='success'>Profile Update</Message>}\r\n\t\t\t\t{loading && <Loading />}\r\n\t\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t\t<Form.Group controlId=\"name\">\r\n\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"name\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter name\"\r\n\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\tonChange={e => setName(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Form.Group controlId=\"email\">\r\n\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter email\"\r\n\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\tonChange={e => setEmail(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Form.Group controlId=\"password\">\r\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Form.Group controlId=\"confirmPassword\">\r\n\t\t\t\t\t\t<Form.Label>Confirm Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"Confirm password\"\r\n\t\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\t\tonChange={e => setConfirmPassword(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Button type=\"submit\" variant=\"primary\">\r\n\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Col>\r\n\t\t\t<Col md={9}>\r\n\t\t\t\t<h2>My Orders</h2>\r\n\t\t\t\t{loadingOrders ? (\r\n\t\t\t\t\t<Loading />\r\n\t\t\t\t) : errorOrders ? (\r\n\t\t\t\t\t<Message variant='danger'>{errorOrders}</Message>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Table striped bordered hover responsive className='table-sm'>\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>ID</th>\r\n\t\t\t\t\t\t\t\t<th>Date</th>\r\n\t\t\t\t\t\t\t\t<th>Total</th>\r\n\t\t\t\t\t\t\t\t<th>Paid</th>\r\n\t\t\t\t\t\t\t\t<th>Delivered</th>\r\n\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{orders.map((order) => (\r\n\t\t\t\t\t\t\t\t<tr key={order._id}>\r\n\t\t\t\t\t\t\t\t\t<td>{order._id}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{order.createdAt.substring(0, 10)}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{order.totalPrice}</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t{order.isPaid ? (\r\n\t\t\t\t\t\t\t\t\t\t\torder.paidAt.substring(0, 10)\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-times' style={{ color: 'red' }}></i>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t{order.isDelivered ? (\r\n\t\t\t\t\t\t\t\t\t\t\torder.deliveredAt.substring(0, 10)\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-times' style={{ color: 'red' }}></i>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<LinkContainer to={`/order/${order._id}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='light'\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='btn-sm'\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDetails\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t)}\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t)\r\n}\r\n\r\nexport default ProfileScreen","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    // ORDER_PAY_RESET\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_SUCCESS,\r\n    // ORDER_DELIVER_RESET\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n    dispatch, \r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const { \r\n            userLogin: { userInfo } \r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${orderId}/pay`, \r\n            paymentResult, \r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (\r\n    dispatch, \r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const { \r\n            userLogin: { userInfo } \r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver`, \r\n            {}, \r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (\r\n    dispatch, \r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const { \r\n            userLogin: { userInfo } \r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (\r\n    dispatch, \r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const { \r\n            userLogin: { userInfo } \r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Nav } from 'react-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Sign In</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { Button, Form} from 'react-bootstrap'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandle = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Shipping</h1>\r\n            <CheckoutSteps step1 step2 />\r\n            <Form onSubmit={submitHandle}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        type='address'\r\n                        placeholder='Enter address'\r\n                        value={address}\r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city}\r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter postalCode'\r\n                        value={postalCode}\r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country}\r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { Button, Form, Col} from 'react-bootstrap'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if(!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('Paypal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Shipping</h1>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label>Select Method</Form.Label>\r\n                </Form.Group>\r\n                <Col>\r\n                    <Form.Check\r\n                        type='radio'\r\n                        label='PayPal or Credit Card'\r\n                        id='PayPal'\r\n                        name='paymentMethod'\r\n                        value='Paypal'\r\n                        checked\r\n                        onChange={(e) => setPaymentMethod(e.target.value)}\r\n                    >\r\n                    </Form.Check>\r\n                    {/* <Form.Check\r\n                        type='radio'\r\n                        label='Stripe'\r\n                        id='Stripe'\r\n                        name='paymentMethod'\r\n                        value='Stripe'\r\n                        checked\r\n                        onChange={(e) => setPaymentMethod(e.target.value)}\r\n                    >\r\n                    </Form.Check> */}\r\n                </Col>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { Link } from 'react-router-dom'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart) \r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    cart.itemsPrice = addDecimals(\r\n        cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    )\r\n\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) + \r\n    Number(cart.taxPrice)\r\n    ).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if(success) {\r\n            history.push(`order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    const  placeOrderHandler = () => {\r\n        dispatch(\r\n            createOrder({\r\n                orderItems: cart.cartItems,\r\n                shippingAddress: cart.shippingAddress,\r\n                paymentMethod: cart.paymentMethod,\r\n                itemsPrice: cart.itemsPrice,\r\n                shippingPrice: cart.shippingPrice,\r\n                taxPrice: cart.taxPrice,\r\n                totalPrice: cart.totalPrice\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                                {cart.shippingAddress.postalCode}, {' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item ,index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                \r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Oder Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            \r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                    type='button' \r\n                                    className='btn-block' \r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrderHandler}\r\n                                >\r\n                                    PLACE ORDER\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport Loading from '../components/Loading'\r\nimport Message from '../components/Message'\r\nimport { Link } from 'react-router-dom'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({match, history}) => {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const { order, loading, error } = orderDetails \r\n\r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if (!loading) {\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n    \r\n        order.itemsPrice = addDecimals(\r\n            order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n        )\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        const addPayPalScript = async () => {\r\n\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if(!order || order._id !== orderId || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if(!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [ dispatch, order, orderId, successPay, successDeliver]) \r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n\r\n    return loading ? <Loading /> : error ? <Message variant='danger'>{error}</Message>\r\n                : <>\r\n                    <h1>Order {order._id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n                                    <p><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p>\r\n                                        <strong>Name: </strong>{' '}\r\n                                        <a href={`mailto: ${order.user.email}`}>{order.user.email}</a>\r\n                                    </p>\r\n                                    <p>\r\n                                        <strong>Address:</strong>\r\n                                        {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                                        {order.shippingAddress.postalCode}, {' '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Paid on {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                        <Message variant='danger'>Not Delivered</Message>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                ) : (\r\n                                    <Message variant='danger'>Not Paid</Message>\r\n                                )}\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Message>Your cart is empty</Message> : (\r\n                                        <ListGroup variant='flush'>\r\n                                            {order.orderItems.map((item ,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n                                                    <Row>\r\n                                                        <Col md={1}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                        </Col>\r\n                                                        <Col>\r\n                                                            <Link to={`/product/${item.product}`}>\r\n                                                                {item.name}\r\n                                                            </Link>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            ))}\r\n                                        </ListGroup>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        \r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Oder Summary</h2>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items</Col>\r\n                                            <Col>${order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping</Col>\r\n                                            <Col>${order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax</Col>\r\n                                            <Col>${order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total</Col>\r\n                                            <Col>${order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loading />}\r\n                                            {!sdkReady ? (\r\n                                                <Loading />\r\n                                            ) : (\r\n                                                <PayPalButton \r\n                                                    amount={order.totalPrice} \r\n                                                    onSuccess={successPaymentHandler} \r\n                                                />\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n                                {loadingDeliver && <Loading />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button' \r\n                                            className='btn btn-block' \r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loading from '../components/Loading'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Button, Table } from 'react-bootstrap'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: sucessDelete } = userDelete\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n        \r\n    }, [dispatch, history, sucessDelete, userInfo])\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? <Loading /> : error ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Admin</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>\r\n                                    {user.isAdmin ? (<i className='fas fa-check' style={{color: 'green'}}></i>) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button \r\n                                        variant='danger' \r\n                                        className='btn-sm' \r\n                                        onClick={() => deleteHandler(user._id)}\r\n                                    >\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loading from '../components/Loading'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({match, history}) => {\r\n    const userId = match.params.id\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { \r\n        loading: loadingUpdate, \r\n        error: errorUpdate, \r\n        success: successUpdate \r\n    } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if(!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n        \r\n    }, [dispatch, history, userId, user, successUpdate])\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n            <h1>Edit User</h1>\r\n            {loadingUpdate && <Loading />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? (\r\n                <Loading />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='isadmin'>\r\n                        <Form.Check\r\n                            type='checkbox'\r\n                            label='Is Admin'\r\n                            checked={isAdmin}\r\n                            onChange={(e) => setIsAdmin(e.target.checked)}\r\n                        ></Form.Check>\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loading from '../components/Loading'\r\nimport Paginate from '../components/Paginate'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Button, Table, Row, Col } from 'react-bootstrap'\r\nimport { \r\n    listProducts, \r\n    deleteProduct, \r\n    createProduct \r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({history, match}) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { \r\n        loading: loadingDelete, \r\n        error: errorDelete, \r\n        success: successDelete \r\n    } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { \r\n        loading: loadingCreate, \r\n        error: errorCreate, \r\n        success: successCreate,\r\n        product: createdProduct\r\n    } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    } \r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if(!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n        \r\n        if(successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('', pageNumber))\r\n        }\r\n        \r\n    }, [\r\n        dispatch, \r\n        history, \r\n        userInfo, \r\n        successDelete, \r\n        successCreate, \r\n        createdProduct,\r\n        pageNumber\r\n    ])\r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loading />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingCreate && <Loading />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            \r\n            {loading ? <Loading /> : error ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <>\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Price</th>\r\n                                <th>Category</th>\r\n                                <th>Brand</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map(product => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>${product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                <i className='fas fa-edit'></i>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                        <Button \r\n                                            variant='danger' \r\n                                            className='btn-sm' \r\n                                            onClick={() => deleteHandler(product._id)}\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Paginate pages={pages} page={page} isAdmin={true} />\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loading from '../components/Loading'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductsDetails, updateProduct } from '../actions/productActions'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({match, history}) => {\r\n    const productId = match.params.id\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { \r\n        loading: loadingUpdate, \r\n        error: errorUpdate, \r\n        success: successUpdate \r\n    } = productUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if(successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if(!product.name || product._id !== productId) {\r\n                dispatch(listProductsDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }  \r\n        }\r\n    }, [dispatch, history, productId, product, successUpdate])\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n            setImage(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            description,\r\n            countInStock\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n            <h1>Edit Product</h1>\r\n            {loadingUpdate && <Loading />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            \r\n            {loading ? (\r\n                <Loading />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='price'>\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control\r\n                            type='number'\r\n                            placeholder='Enter Price'\r\n                            value={price}\r\n                            onChange={(e) => setPrice(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='Image'>\r\n                        <Form.Label>Image</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter image url'\r\n                            value={image}\r\n                            onChange={(e) => setImage(e.target.value)}\r\n                        ></Form.Control>\r\n                        <Form.File \r\n                            id='image-file' \r\n                            label='Choose File' \r\n                            custom onChange={uploadFileHandler}\r\n                        ></Form.File>\r\n                        {uploading && <Loading />}\r\n                    </Form.Group>\r\n                    <Form.Group controlId='brand'>\r\n                        <Form.Label>Brand</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter Brand'\r\n                            value={brand}\r\n                            onChange={(e) => setBrand(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='countInStock'>\r\n                        <Form.Label>Count In Stock</Form.Label>\r\n                        <Form.Control\r\n                            type='number'\r\n                            placeholder='Enter CountInStock'\r\n                            value={countInStock}\r\n                            onChange={(e) => setCountInStock(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='category'>\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter category'\r\n                            value={category}\r\n                            onChange={(e) => setCategory(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='description'>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter description'\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loading from '../components/Loading'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Button, Table } from 'react-bootstrap'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n        \r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? <Loading /> : error ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>User</th>\r\n                            <th>Date</th>\r\n                            <th>Total</th>\r\n                            <th>Paid</th>\r\n                            <th>Delivered</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>\r\n                                    {order.isPaid ? (\r\n                                        order.paidAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    {order.isDelivered ? (\r\n                                        order.dliveredAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/order/${order._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './bootstrap.min.css'\nimport Footer from './components/Footer'\nimport Header from './components/Header'\nimport  { Container } from 'react-bootstrap'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n        <main className='py-3'>\n          <Container>\n            <Route path='/order/:id' component={OrderScreen} />\n            <Route path='/shipping' component={ShippingScreen} />\n            <Route path='/payment' component={PaymentScreen} />\n            <Route path='/placeorder' component={PlaceOrderScreen} />\n            <Route path='/login' component={LoginScreen} />\n            <Route path='/register' component={RegisterScreen} />\n            <Route path='/profile' component={ProfileScreen} />\n            <Route path='/product/:id' component={ProductScreen} />\n            <Route path='/cart/:id?' component={CartScreen} />\n            <Route path='/admin/userlist' component={UserListScreen} />\n            <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n            <Route \n              path='/admin/productlist' \n              component={ProductListScreen}\n              exact \n            />\n            <Route \n              path='/admin/productlist/:pageNumber' \n              component={ProductListScreen} \n              exact\n            />\n            <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n            <Route path='/admin/orderlist' component={OrderListScreen} />\n            <Route path='/search/:keyword' component={HomeScreen} exact />\n            <Route path='/page/:pageNumber' component={HomeScreen} exact />\n            <Route \n              path='/search/:keyword/page/:pageNumber' \n              component={HomeScreen} \n              exact \n            />\n            <Route path='/' component={HomeScreen} exact />\n          </Container>\n        </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}